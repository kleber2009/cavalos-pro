#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
from bs4 import BeautifulSoup
import json
import re
from datetime import datetime

def analisar_corrida_southwell():
    """
    Analisa a corrida espec√≠fica de Southwell para comparar com nossas an√°lises
    """
    
    url = 'https://www.attheraces.com/racecard/Southwell/21-September-2025/1537'
    
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'en-US,en;q=0.5',
        'Accept-Encoding': 'gzip, deflate, br',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1'
    }
    
    try:
        print("üîç Analisando corrida de Southwell...")
        response = requests.get(url, headers=headers, timeout=30)
        
        if response.status_code != 200:
            print(f"‚ùå Erro ao acessar a p√°gina: {response.status_code}")
            return None
            
        soup = BeautifulSoup(response.text, 'html.parser')
        
        # Cavalos que est√°vamos analisando
        cavalos_analise = {
            'bella delizia': {'posicao_prevista': 1, 'favorito': True},
            'capitalization': {'posicao_prevista': 2, 'favorito': True}, 
            'crimson rambler': {'posicao_prevista': 3, 'favorito': True},
            'hypnotysed': {'posicao_prevista': None, 'favorito': False, 'resultado': 1},
            'yellow diamonds': {'posicao_prevista': None, 'favorito': False, 'resultado': 2}
        }
        
        print("\nüìä AN√ÅLISE COMPARATIVA DA CORRIDA")
        print("=" * 50)
        
        # Buscar informa√ß√µes dos cavalos na p√°gina
        cavalos_encontrados = []
        
        # Procurar por diferentes seletores poss√≠veis
        possible_selectors = [
            '.runner-name',
            '.horse-name', 
            '[data-horse-name]',
            '.racecard-runner',
            '.runner'
        ]
        
        for selector in possible_selectors:
            elementos = soup.select(selector)
            if elementos:
                print(f"‚úÖ Encontrados {len(elementos)} elementos com seletor: {selector}")
                for elem in elementos[:10]:  # Limitar a 10 para n√£o sobrecarregar
                    texto = elem.get_text(strip=True).lower()
                    if any(cavalo in texto for cavalo in cavalos_analise.keys()):
                        cavalos_encontrados.append({
                            'elemento': elem,
                            'texto': texto,
                            'seletor': selector
                        })
                break
        
        # Se n√£o encontrou com seletores espec√≠ficos, buscar no texto geral
        if not cavalos_encontrados:
            print("üîç Buscando cavalos no texto geral da p√°gina...")
            texto_pagina = soup.get_text().lower()
            
            for nome_cavalo in cavalos_analise.keys():
                if nome_cavalo in texto_pagina:
                    print(f"‚úÖ Encontrado: {nome_cavalo.title()}")
                    cavalos_encontrados.append({
                        'nome': nome_cavalo,
                        'encontrado': True
                    })
        
        # An√°lise dos resultados
        print("\nüèÜ RESULTADOS DA CORRIDA:")
        print("-" * 30)
        print("1¬∫ Lugar: HYPNOTYSED (n√£o estava entre nossos favoritos)")
        print("2¬∫ Lugar: YELLOW DIAMONDS (n√£o estava entre nossos favoritos)")
        
        print("\nüìà NOSSOS FAVORITOS:")
        print("-" * 30)
        print("1¬∫ Favorito: Bella Delizia")
        print("2¬∫ Favorito: Capitalization")
        print("3¬∫ Favorito: Crimson Rambler")
        
        print("\nü§î AN√ÅLISE DO RESULTADO:")
        print("-" * 30)
        print("‚Ä¢ Os 3 favoritos da nossa an√°lise N√ÉO ficaram no p√≥dio")
        print("‚Ä¢ O vencedor (Hypnotysed) n√£o estava entre nossos favoritos")
        print("‚Ä¢ O 2¬∫ colocado (Yellow Diamonds) tamb√©m n√£o estava previsto")
        print("‚Ä¢ Isso indica que nossa an√°lise pode ter alguns pontos de melhoria")
        
        # Buscar mais informa√ß√µes sobre os cavalos vencedores
        print("\nüîç INFORMA√á√ïES ADICIONAIS DOS VENCEDORES:")
        print("-" * 30)
        
        # Procurar por odds, j√≥queis, etc.
        odds_elements = soup.find_all(text=re.compile(r'\d+/\d+|\d+\.\d+'))
        if odds_elements:
            print(f"üìä Encontradas {len(odds_elements)} refer√™ncias a odds na p√°gina")
        
        # Salvar dados para an√°lise posterior
        dados_analise = {
            'data_corrida': '21-September-2025',
            'horario': '15:37',
            'hip√≥dromo': 'Southwell',
            'url': url,
            'nossos_favoritos': ['Bella Delizia', 'Capitalization', 'Crimson Rambler'],
            'resultado_real': ['Hypnotysed', 'Yellow Diamonds'],
            'acerto_previsao': False,
            'cavalos_encontrados': len(cavalos_encontrados),
            'timestamp_analise': datetime.now().isoformat()
        }
        
        # Salvar em arquivo JSON
        with open('analise_southwell_resultado.json', 'w', encoding='utf-8') as f:
            json.dump(dados_analise, f, indent=2, ensure_ascii=False)
        
        print("\nüíæ Dados salvos em: analise_southwell_resultado.json")
        
        print("\nüéØ RECOMENDA√á√ïES PARA MELHORIA:")
        print("-" * 30)
        print("1. Revisar crit√©rios de an√°lise de favoritos")
        print("2. Incluir an√°lise de cavalos com odds mais altas")
        print("3. Considerar fatores como condi√ß√µes da pista")
        print("4. Analisar hist√≥rico recente dos j√≥queis")
        print("5. Verificar forma atual vs. hist√≥rico geral")
        
        return dados_analise
        
    except requests.RequestException as e:
        print(f"‚ùå Erro na requisi√ß√£o: {e}")
        return None
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        return None

if __name__ == "__main__":
    resultado = analisar_corrida_southwell()
    if resultado:
        print("\n‚úÖ An√°lise conclu√≠da com sucesso!")
    else:
        print("\n‚ùå Falha na an√°lise.")